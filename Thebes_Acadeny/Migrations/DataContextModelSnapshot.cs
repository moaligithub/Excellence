// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thebes_Acadeny.Models.DataBaseContext;

namespace Thebes_Acadeny.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Thebes_Acadeny.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GategoryIdFk")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LevelIdFk")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumper")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecialtiesId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.HasIndex("GategoryIdFk");

                    b.HasIndex("LevelIdFk");

                    b.HasIndex("SpecialtiesId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = -92539587,
                            FullName = "Mohamed Ali",
                            GategoryIdFk = 1,
                            ImageUrl = "InShot_20211111_204615744.jpg",
                            LevelIdFk = 2,
                            Password = "nd112004",
                            PhoneNumper = "01159252091",
                            SpecialtiesId = 1,
                            UserName = "mo112004",
                            WhatsApp = "Https://api.whatsapp.com/send?phone=0201159252091"
                        });
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<bool>("boolAnswer")
                        .HasColumnType("bit");

                    b.HasKey("AnswerId");

                    b.HasIndex("ExamId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Books", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminIdFk")
                        .HasColumnType("int");

                    b.Property<bool>("Assent")
                        .HasColumnType("bit");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PdfUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlantId")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("AdminIdFk");

                    b.HasIndex("PlantId");

                    b.ToTable("BooksAdmins");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Categores", b =>
                {
                    b.Property<int>("GategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GategoryId");

                    b.ToTable("Categores");

                    b.HasData(
                        new
                        {
                            GategoryId = -1,
                            CategoryName = "اختر الفئه"
                        },
                        new
                        {
                            GategoryId = 1,
                            CategoryName = "Owner"
                        },
                        new
                        {
                            GategoryId = 2,
                            CategoryName = "AdminShimaa"
                        },
                        new
                        {
                            GategoryId = 3,
                            CategoryName = "Admin"
                        });
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Entity.Tearm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tearms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "الترم الاول"
                        },
                        new
                        {
                            Id = 2,
                            Name = "الترم الثاني"
                        });
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Entity.UrlWebSite", b =>
                {
                    b.Property<int>("UrlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UrlText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UrlId");

                    b.ToTable("UrlWebSite");

                    b.HasData(
                        new
                        {
                            UrlId = 1,
                            UrlText = "https://localhost:44347/"
                        });
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminIdFk")
                        .HasColumnType("int");

                    b.Property<bool>("Assent")
                        .HasColumnType("bit");

                    b.Property<int?>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExamId");

                    b.HasIndex("AdminIdFk");

                    b.HasIndex("PlantId");

                    b.ToTable("ExamAdmins");

                    b.HasData(
                        new
                        {
                            ExamId = -1,
                            AdminIdFk = -92539587,
                            Assent = true,
                            Title = "اختر امتحان"
                        });
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Level", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LevelId");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            LevelId = -1,
                            LevelName = "اختر الفرقه"
                        },
                        new
                        {
                            LevelId = 1,
                            LevelName = "الفرقه الاولي"
                        },
                        new
                        {
                            LevelId = 2,
                            LevelName = "الفرقه الثانيه"
                        },
                        new
                        {
                            LevelId = 3,
                            LevelName = "الفرقه الثالثه"
                        },
                        new
                        {
                            LevelId = 4,
                            LevelName = "الفرقه الرابعه"
                        });
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.MessagesUser", b =>
                {
                    b.Property<int>("MessageUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bol")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageUserId");

                    b.ToTable("MessagesUsers");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LevelIdFk")
                        .HasColumnType("int");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecialtiesIdFk")
                        .HasColumnType("int");

                    b.Property<int?>("TearmId")
                        .HasColumnType("int");

                    b.HasKey("PlantId");

                    b.HasIndex("LevelIdFk");

                    b.HasIndex("SpecialtiesIdFk");

                    b.HasIndex("TearmId");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            PlantId = -1,
                            LevelIdFk = 1,
                            PlantName = "اختر ماده",
                            SpecialtiesIdFk = 1
                        });
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Posts", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminIdFk")
                        .HasColumnType("int");

                    b.Property<bool>("Assent")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostId");

                    b.HasIndex("AdminIdFk");

                    b.HasIndex("PlantId");

                    b.ToTable("PostsAdmins");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExamIdFk")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.HasIndex("ExamIdFk");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Question_True_or_false", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Answer")
                        .HasColumnType("bit");

                    b.Property<int>("ExamIdFk")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExamIdFk");

                    b.ToTable("Question_True_or_false");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Specialties", b =>
                {
                    b.Property<int>("SpecialtiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SpecialtiesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecialtiesId");

                    b.ToTable("Specialties");

                    b.HasData(
                        new
                        {
                            SpecialtiesId = -1,
                            SpecialtiesName = "اختر التخصص"
                        },
                        new
                        {
                            SpecialtiesId = 1,
                            SpecialtiesName = "نظم المعلومات الاداريه"
                        });
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Video", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminIdFk")
                        .HasColumnType("int");

                    b.Property<bool>("Assent")
                        .HasColumnType("bit");

                    b.Property<int?>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VideoId");

                    b.HasIndex("AdminIdFk");

                    b.HasIndex("PlantId");

                    b.ToTable("VideoAdmins");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Admin", b =>
                {
                    b.HasOne("Thebes_Acadeny.Models.Categores", "Categores")
                        .WithMany("Admins")
                        .HasForeignKey("GategoryIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thebes_Acadeny.Models.Level", "Level")
                        .WithMany("Admins")
                        .HasForeignKey("LevelIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thebes_Acadeny.Models.Specialties", "Specialties")
                        .WithMany("Admins")
                        .HasForeignKey("SpecialtiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categores");

                    b.Navigation("Level");

                    b.Navigation("Specialties");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Answer", b =>
                {
                    b.HasOne("Thebes_Acadeny.Models.Exam", "Exam")
                        .WithMany("answers")
                        .HasForeignKey("ExamId");

                    b.HasOne("Thebes_Acadeny.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Books", b =>
                {
                    b.HasOne("Thebes_Acadeny.Models.Admin", "Admin")
                        .WithMany("Books")
                        .HasForeignKey("AdminIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thebes_Acadeny.Models.Plant", "Plant")
                        .WithMany("Books")
                        .HasForeignKey("PlantId");

                    b.Navigation("Admin");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Exam", b =>
                {
                    b.HasOne("Thebes_Acadeny.Models.Admin", "Admin")
                        .WithMany("Exam")
                        .HasForeignKey("AdminIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thebes_Acadeny.Models.Plant", "Plant")
                        .WithMany("Exams")
                        .HasForeignKey("PlantId");

                    b.Navigation("Admin");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Plant", b =>
                {
                    b.HasOne("Thebes_Acadeny.Models.Level", "Level")
                        .WithMany("Plants")
                        .HasForeignKey("LevelIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thebes_Acadeny.Models.Specialties", "Specialties")
                        .WithMany("Plants")
                        .HasForeignKey("SpecialtiesIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thebes_Acadeny.Models.Entity.Tearm", "Tearm")
                        .WithMany("Plants")
                        .HasForeignKey("TearmId");

                    b.Navigation("Level");

                    b.Navigation("Specialties");

                    b.Navigation("Tearm");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Posts", b =>
                {
                    b.HasOne("Thebes_Acadeny.Models.Admin", "Admin")
                        .WithMany("Posts")
                        .HasForeignKey("AdminIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thebes_Acadeny.Models.Plant", "Plant")
                        .WithMany("Posts")
                        .HasForeignKey("PlantId");

                    b.Navigation("Admin");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Question", b =>
                {
                    b.HasOne("Thebes_Acadeny.Models.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("ExamIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Question_True_or_false", b =>
                {
                    b.HasOne("Thebes_Acadeny.Models.Exam", "Exam")
                        .WithMany("question_True_Or_Falses")
                        .HasForeignKey("ExamIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Video", b =>
                {
                    b.HasOne("Thebes_Acadeny.Models.Admin", "Admin")
                        .WithMany("Video")
                        .HasForeignKey("AdminIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thebes_Acadeny.Models.Plant", "Plant")
                        .WithMany("VideoAdmins")
                        .HasForeignKey("PlantId");

                    b.Navigation("Admin");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Admin", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Exam");

                    b.Navigation("Posts");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Categores", b =>
                {
                    b.Navigation("Admins");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Entity.Tearm", b =>
                {
                    b.Navigation("Plants");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Exam", b =>
                {
                    b.Navigation("answers");

                    b.Navigation("question_True_Or_Falses");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Level", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Plants");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Plant", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Exams");

                    b.Navigation("Posts");

                    b.Navigation("VideoAdmins");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Thebes_Acadeny.Models.Specialties", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Plants");
                });
#pragma warning restore 612, 618
        }
    }
}
